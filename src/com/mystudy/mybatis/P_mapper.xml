<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="profile"> <!-- 루트태그 -->
	
	<!-- 프로필등록 테스트용 -->
	<insert id="write" parameterType="ProfileVO">
		INSERT INTO PROFILE
		VALUES ( NVL((SELECT MAX(PROFILE_CODE) FROM PROFILE ), 0) + 1 ,
				 #{oriFilename},  #{userCode} , #{content} , SYSDATE, #{sysFilename})
	</insert>
	
	<!-- 프로필등록 -시퀀스로 넘버링
	 <insert id="write" parameterType="com.mystudy.vo.ProfileVO">
		INSERT INTO PROFILE
		VALUES ( PROFILE_SEQ, #{filename},  #{userCode} , #{content} , SYSDATE);
	</insert>
	 -->
	 
	
	<select id="getProcode" parameterType="int" resultType="int">
		SELECT PROFILE_CODE 
		FROM PROFILE
		WHERE PROFILE_CODE = (SELECT MAX(PROFILE_CODE) FROM PROFILE)
				AND USER_CODE = #{userCode}
	</select>
	
	
	<!-- 최근 프로필 가져오기  -->
	<select id="rcntProfile" parameterType="int" resultType="ProfileVO">
		SELECT  *
		FROM 	PROFILE 
		WHERE	PROFILE_CODE = (SELECT MAX(PROFILE_CODE) 
		                        FROM PROFILE
		                        WHERE USER_CODE = #{userCode})
	
	<!-- 
	SELECT  PROFILE_CODE, ORI_FILENAME, USER_CODE, CONTENT, REGDATE
		FROM 	PROFILE 
		WHERE	PROFILE_CODE = (SELECT MAX(PROFILE_CODE) FROM PROFILE)
				AND USER_CODE = #{userCode}
	 -->	
	</select>
					
				
	<!-- 프로필히스토리(상태메시지) 불러오기 -->
	<select id="getProHistory" parameterType="int" resultType="ProfileVO">
		SELECT * FROM PROFILE WHERE USER_CODE = #{userCode} ORDER BY PROFILE_CODE DESC 
	</select>
	
	<!-- (페이징)프로필 전체갯수 -->
	<select id="getProNum" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM PROFILE
		WHERE USER_CODE = ${userCode}
	</select>
	
	<!-- (페이징) 페이지별 글번호 -->
	<select id="getPageList" parameterType="map" resultType="ProfileVO">
		SELECT *
		FROM (SELECT ROWNUM R_NUM, P.*
				FROM (SELECT *
		                FROM PROFILE
		            	WHERE USER_CODE = #{userCode}
		                ORDER BY PROFILE_CODE DESC)P )
		WHERE R_NUM BETWEEN #{begin} AND #{end} 
	</select>
	
	
	<!-- 히스토리 삭제 -->
	<delete id="delHistory_Img" parameterType="int">
	DELETE 
	FROM IMAGE_FILE
	WHERE IMAGE_CODE = 'P' AND POST_CODE = #{postCode} 
	</delete>
	
	<delete id="delHistory_pf" parameterType="int">
	DELETE 
	FROM PROFILE
	WHERE PROFILE_CODE = #{profileCode}
	</delete>
</mapper>